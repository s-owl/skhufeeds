version: "3"

services:
  # Reverse Proxy
  proxy:
    image: registry.gitlab.com/skhu-sss/caddy:latest
    ports:
      - 443:443
      - 80:80
    networks:
      skhufeeds-network:
        aliases:
          - proxy
    deploy:
      replicas: 1
    volumes:
      - proxy-vol:/usr/caddyfiles
      - static-vol:/usr/caddystatic/static

  # Main Process
  main:
    image: registry.gitlab.com/skhu-sss/skhufeeds:latest
    networks:
      skhufeeds-network:
        aliases:
          - main
    deploy:
      replicas: 1
    environment:
      SECRET_KEY: "(DJANGO SECRET_KEY : 암호화 등에 사용되는 키 입니다. 임의로 생성된 50자 문자열을 넣습니다.)"
      RABBITMQ_URL: "RabbitMQ 서버 주소입니다. (예시 : amqp://localhost)"
      GOO_GL_ALI_KEY: "Google URL 단축 서비스 API 키"
      DEBUG: "디버깅 모드 사용 여부 (True / False)"
      DB_USER: 데이터베이스_사용자_이름
      DB_PASSWORD: 데이터베이스_사용자_암호
      DB_NAME: 데이터베이스_이름
      DB_HOST: 데이터베이스_주소(예시:localhost)
      DB_PORT: 데이터베이스_포트
      APP_HOST: "서버를 작동하는 머신이 할당받은 도메인 네임."
      BASEURL: "서버 주소(https://example.com)"
    command: bash start_main.sh
    links:
      - database
      - broker
    volumes:
      - static-vol:/usr/src/app/static

  # Worker Process - Uses same image from main service with diffrent entry command
  worker:
    image: registry.gitlab.com/skhu-sss/skhufeeds:latest
    networks:
      skhufeeds-network:
        aliases:
          - worker
    deploy:
      replicas: 1
    environment:
      SECRET_KEY: "(DJANGO SECRET_KEY : 암호화 등에 사용되는 키 입니다. 임의로 생성된 50자 문자열을 넣습니다.)"
      RABBITMQ_URL: "RabbitMQ 서버 주소입니다. (예시 : amqp://localhost)"
      GOO_GL_ALI_KEY: "Google URL 단축 서비스 API 키"
      DEBUG: "디버깅 모드 사용 여부 (True / False)"
      DB_USER: 데이터베이스_사용자_이름
      DB_PASSWORD: 데이터베이스_사용자_암호
      DB_NAME: 데이터베이스_이름
      DB_HOST: 데이터베이스_주소(예시:localhost)
      DB_PORT: 데이터베이스_포트
      APP_HOST: "서버를 작동하는 머신이 할당받은 도메인 네임."
      BASEURL: "서버 주소(https://example.com)"
    command: bash start_worker.sh
    links:
      - database
      - broker

  # Rabbit MQ Message Broker
  broker:
    image: rabbitmq:alpine
    networks:
      skhufeeds-network:
        aliases:
          - broker
    deploy:
      replicas: 1

  # MySQL Database
  database:
    image: mysql:latest
    networks:
      skhufeeds-network:
        aliases:
          - database
    deploy:
      replicas: 1
    environment:
      MYSQL_USER: skhufeeds
      MYSQL_PASSWORD: Skhufeedsdb1!
      MYSQL_DATABASE: skhufeedsdb
      MYSQL_ROOT_PASSWORD: Skhufeedsdb1!
    volumes:
      - database-vol:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

# Networks for docker services
networks:
  skhufeeds-network:

# Persistent Volumes for services
volumes:
  proxy-vol:
  database-vol:
  static-vol:
